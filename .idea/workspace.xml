<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c132f8cc-5bbb-4590-aa92-0b98883dd67b" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ast/ast.go" beforeDir="false" afterPath="$PROJECT_DIR$/ast/ast.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/evaluator/evaluator.go" beforeDir="false" afterPath="$PROJECT_DIR$/evaluator/evaluator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/evaluator/evaluator_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/evaluator/evaluator_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lexer/lexer.go" beforeDir="false" afterPath="$PROJECT_DIR$/lexer/lexer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lexer/lexer_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lexer/lexer_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/object/object.go" beforeDir="false" afterPath="$PROJECT_DIR$/object/object.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/parser/parser.go" beforeDir="false" afterPath="$PROJECT_DIR$/parser/parser.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/parser/parser_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/parser/parser_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/token/token.go" beforeDir="false" afterPath="$PROJECT_DIR$/token/token.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.22.0" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="develop" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$" />
      </list>
    </option>
    <option name="useGoPathFromSystemEnvironment" value="false" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2c0gQRb19OhGZJhYw4TCA4CTYU7" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build main.go.executor": "Run",
    "Go Build.go build tomlang/.executor": "Run",
    "Go Test.TestArrayIndexExpressions in tomlang/evaluator.executor": "Run",
    "Go Test.TestArrayLiterals in tomlang/evaluator.executor": "Run",
    "Go Test.TestBuiltinFunctions in tomlang/evaluator.executor": "Run",
    "Go Test.TestCallExpressionmParsing in tomlang/parser.executor": "Run",
    "Go Test.TestClosures in tomlang/evaluator.executor": "Run",
    "Go Test.TestErrorHandling in tomlang/evaluator.executor": "Run",
    "Go Test.TestFunctionLiteralParsing in tomlang/parser.executor": "Run",
    "Go Test.TestFunctionObject in tomlang/evaluator.executor": "Run",
    "Go Test.TestFunctionmParameterParsing in tomlang/parser.executor": "Run",
    "Go Test.TestIfExpression in tomlang/parser.executor": "Run",
    "Go Test.TestLetStatement in tomlang/parser.executor": "Run",
    "Go Test.TestLetStatements in parser_test.go.executor": "Run",
    "Go Test.TestLetStatements in tomlang/parser.executor": "Run",
    "Go Test.TestParsingArrayLiterals in tomlang/parser.executor": "Run",
    "Go Test.TestParsingIndexExpressions in tomlang/parser.executor": "Run",
    "Go Test.TestParsingPrefixExpressions in tomlang/parser.executor": "Run",
    "Go Test.TestStringLiteral in tomlang/evaluator.executor": "Run",
    "Go Test.TestStringLiteralExpression in tomlang/parser.executor": "Run",
    "Go Test.evaluator_test.go.executor": "Run",
    "Go Test.lexer_test.go.executor": "Run",
    "Go Test.parser_test.go.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "configurable..is.expanded": "true",
    "git-widget-placeholder": "extendFunc",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/tserpez/development/tomlang",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.lookFeel"
  }
}]]></component>
  <component name="RunManager" selected="Go Build.go build main.go">
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="tomlang" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="tomlang" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestArrayIndexExpressions in tomlang/evaluator" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tomlang" />
      <working_directory value="$PROJECT_DIR$/evaluator" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="tomlang/evaluator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestArrayIndexExpressions\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestArrayLiterals in tomlang/evaluator" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tomlang" />
      <working_directory value="$PROJECT_DIR$/evaluator" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="tomlang/evaluator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestArrayLiterals\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestErrorHandling in tomlang/evaluator" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tomlang" />
      <working_directory value="$PROJECT_DIR$/evaluator" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="tomlang/evaluator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestErrorHandling\E$" />
      <method v="2" />
    </configuration>
    <configuration name="evaluator_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tomlang" />
      <working_directory value="$PROJECT_DIR$/evaluator" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/evaluator/evaluator_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build main.go" />
        <item itemvalue="Go Test.evaluator_test.go" />
        <item itemvalue="Go Test.TestArrayIndexExpressions in tomlang/evaluator" />
        <item itemvalue="Go Test.TestArrayLiterals in tomlang/evaluator" />
        <item itemvalue="Go Test.TestErrorHandling in tomlang/evaluator" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-2946fb9b3188-d131227c97e2-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.12662.60" />
        <option value="bundled-js-predefined-1d06a55b98c1-e293885f7bc4-JavaScript-GO-241.12662.60" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="xml" />
    <option name="LAST_COMMIT_MESSAGE" value="xml" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>